{"level":"error","message":"\nInvalid `User.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:42:32\n\n  39 \n  40 user.password = hashPassword(user.password)\n  41 \n→ 42 const newUser = await User.create({\n       name: \"Fadida Zanetti Junaedy\",\n       ~~~~\n       username: \"fadidajunaedy\",\n       email: \"fadidajunaedy@gmail.com\",\n       position: \"HRGA\",\n       password: \"51e78a86c49f6f385c5e22ccc344a5fbee0586aa64b803e1c5846d30d886a59c970273d7f7dc81b9e709a88c10d3b80b1ef7ff4b5f605087bf202048eb210bc1\",\n       role: \"user\",\n       isVerified: 0,\n       status: 0,\n     ? data?: UserCreateInput | UserUncheckedCreateInput\n     })\n\nUnknown argument `name`. Did you mean `data`? Available options are marked with ?.","target":"user.create","timestamp":"2023-12-24T18:22:34.550Z"}
{"level":"error","message":"\nInvalid `User.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:42:32\n\n  39 \n  40 user.password = hashPassword(user.password)\n  41 \n→ 42 const newUser = await User.create({\n       data: {\n         name: \"Fadida Zanetti Junaedy\",\n         username: \"fadidajunaedy\",\n         email: \"fadidajunaedy@gmail.com\",\n         position: \"HRGA\",\n         password: \"51e78a86c49f6f385c5e22ccc344a5fbee0586aa64b803e1c5846d30d886a59c970273d7f7dc81b9e709a88c10d3b80b1ef7ff4b5f605087bf202048eb210bc1\",\n         role: \"user\",\n         isVerified: 0,\n                     ~\n         status: 0\n       },\n       select: {\n         name: true,\n         username: true,\n         email: true,\n         password: true,\n         position: true\n       }\n     })\n\nArgument `isVerified`: Invalid value provided. Expected Boolean, provided Int.","target":"user.create","timestamp":"2023-12-24T18:25:29.183Z"}
{"level":"error","message":"\nInvalid `VerificationToken.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:53:55\n\n  50     }\n  51 })\n  52 \n→ 53 const verificationToken = await VerificationToken.create({\n       userId: undefined,\n       token: \"1b2773ee25c48f117fa4ce53b06bb13e6c1ba5cb64b3c84f\",\n       ~~~~~\n     ? data?: VerificationTokenCreateInput | VerificationTokenUncheckedCreateInput\n     })\n\nUnknown argument `token`. Available options are marked with ?.","target":"verificationToken.create","timestamp":"2023-12-25T00:07:35.802Z"}
{"level":"error","message":"\nInvalid `VerificationToken.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:58:55\n\n  55 //     token: crypto.randomBytes(24).toString(\"hex\")\n  56 // }\n  57 \n→ 58 const verificationToken = await VerificationToken.create({\n       data: {\n         userId: undefined,\n         token: \"e63febe50eb3ddfa7df876e3e023dd3ebc6881ee4c7f9623\",\n     +   user: {\n     +     create: UserCreateWithoutVerificationTokenInput | UserUncheckedCreateWithoutVerificationTokenInput,\n     +     connectOrCreate: UserCreateOrConnectWithoutVerificationTokenInput,\n     +     connect: UserWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `user` is missing.","target":"verificationToken.create","timestamp":"2023-12-25T00:12:17.721Z"}
{"level":"error","message":"\nInvalid `VerificationToken.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:58:55\n\n  55 //     token: crypto.randomBytes(24).toString(\"hex\")\n  56 // }\n  57 \n→ 58 const verificationToken = await VerificationToken.create({\n       data: {\n         userId: undefined,\n         token: \"cf56785258cfff03389ad3051f7065fde7f1677e9b6f3360\",\n     +   user: {\n     +     create: UserCreateWithoutVerificationTokenInput | UserUncheckedCreateWithoutVerificationTokenInput,\n     +     connectOrCreate: UserCreateOrConnectWithoutVerificationTokenInput,\n     +     connect: UserWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `user` is missing.","target":"verificationToken.create","timestamp":"2023-12-25T00:16:55.998Z"}
{"level":"error","message":"\nInvalid `VerificationToken.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:55:55\n\n  52 \n  53 console.log()\n  54 \n→ 55 const verificationToken = await VerificationToken.create({\n       data: {\n         userId: undefined,\n         token: \"0ce3abda1701e994cd07a8744428c5156bee42117661ad9e\",\n     +   user: {\n     +     create: UserCreateWithoutVerificationTokenInput | UserUncheckedCreateWithoutVerificationTokenInput,\n     +     connectOrCreate: UserCreateOrConnectWithoutVerificationTokenInput,\n     +     connect: UserWhereUniqueInput\n     +   }\n       },\n       select: {\n         userId: true,\n         token: true\n       }\n     })\n\nArgument `user` is missing.","target":"verificationToken.create","timestamp":"2023-12-25T00:23:08.953Z"}
{"level":"error","message":"\nInvalid `VerificationToken.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:53:55\n\n  50     }\n  51 })\n  52 \n→ 53 const verificationToken = await VerificationToken.create({\n       data: {\n         userId: undefined,\n         token: \"c7c3129c2748c9df68e74d2cf33c8e8e36d791c295b0d6c2\",\n     +   user: {\n     +     create: UserCreateWithoutVerificationTokenInput | UserUncheckedCreateWithoutVerificationTokenInput,\n     +     connectOrCreate: UserCreateOrConnectWithoutVerificationTokenInput,\n     +     connect: UserWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `user` is missing.","target":"verificationToken.create","timestamp":"2023-12-25T00:27:21.662Z"}
{"level":"error","message":"\nInvalid `VerificationToken.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:53:55\n\n  50     }\n  51 })\n  52 \n→ 53 const verificationToken = await VerificationToken.create({\n       data: {\n         userId: undefined,\n         token: \"90947f44dde179e34620421eae7ce966e6394a4e33f9287e\",\n     +   user: {\n     +     create: UserCreateWithoutVerificationTokenInput | UserUncheckedCreateWithoutVerificationTokenInput,\n     +     connectOrCreate: UserCreateOrConnectWithoutVerificationTokenInput,\n     +     connect: UserWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `user` is missing.","target":"verificationToken.create","timestamp":"2023-12-25T01:16:06.892Z"}
{"level":"error","message":"\nInvalid `User.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:58:50\n\n  55 \n  56 const verificationToken = await generateEmailVerificationToken(newUser.id)\n  57 \n→ 58 const userWithVerificationToken = await User.create({\n       where: {\n       ~~~~~\n         id: 3\n       },\n       data: {\n         VerificationToken: {\n           create: {\n             token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE3MDM0ODY0NjksImV4cCI6MTcwMzU3Mjg2OX0.tpYwQkIrb8y7iNLcIgV_KSIsNUxY0P8VdBImQpZOBho\"\n           }\n         }\n       },\n       select: {\n         id: true,\n         name: true,\n         username: true,\n         email: true,\n         password: true,\n         position: true,\n         VerificationToken: true\n       }\n     })\n\nUnknown argument `where`. Available options are marked with ?.","target":"user.create","timestamp":"2023-12-25T06:41:09.343Z"}
{"level":"error","message":"\nInvalid `User.deleteMany()` invocation in\nD:\\Code\\madani-infosphere-api\\test\\test-util.js:32:16\n\n  29 }\n  30 \n  31 const removeTestUser = async () => {\n→ 32     await User.deleteMany(\nForeign key constraint failed on the field: `userId`","target":"user.deleteMany","timestamp":"2023-12-25T08:19:50.250Z"}
{"level":"error","message":"\nInvalid `prismaClient.user.deleteMany()` invocation in\nD:\\Code\\madani-infosphere-api\\test\\test-util.js:30:29\n\n  27 }\n  28 \n  29 const removeTestUser = async () => {\n→ 30     await prismaClient.user.deleteMany(\nForeign key constraint failed on the field: `userId`","target":"user.deleteMany","timestamp":"2023-12-25T08:23:59.844Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:96:23\n\n  93     throw new ResponseError(400, \"Token expired\")\n  94 }\n  95 \n→ 96 return await User.update({\n       where: {\n         verificationToken: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTksImlhdCI6MTcwMzU3MTIyNiwiZXhwIjoxNzAzNjU3NjI2fQ.soO9TIGaKw0RvxSKLXnN7Uf3OE42qPBlQDWhgjVu0sM\",\n     ?   id?: Int,\n     ?   username?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   name?: StringFilter | String,\n     ?   password?: StringFilter | String,\n     ?   position?: StringFilter | String,\n     ?   role?: StringFilter | String,\n     ?   isVerified?: BoolFilter | Boolean,\n     ?   status?: BoolFilter | Boolean,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   refreshToken?: StringNullableFilter | String | Null,\n     ?   resetPasswordToken?: StringNullableFilter | String | Null,\n     ?   Report?: ReportListRelationFilter,\n     ?   Event?: EventListRelationFilter,\n     ?   Contact?: ContactListRelationFilter\n       },\n       data: {\n         verificationToken: null\n       },\n       select: {\n         id: true,\n         name: true,\n         username: true,\n         email: true,\n         position: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `username` or `email` arguments. Available options are marked with ?.","target":"user.update","timestamp":"2023-12-26T06:30:02.555Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:96:23\n\n  93     throw new ResponseError(400, \"Token expired\")\n  94 }\n  95 \n→ 96 return await User.update({\n       where: {\n         verificationToken: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTksImlhdCI6MTcwMzU3MTIyNiwiZXhwIjoxNzAzNjU3NjI2fQ.soO9TIGaKw0RvxSKLXnN7Uf3OE42qPBlQDWhgjVu0sM\",\n     ?   id?: Int,\n     ?   username?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   name?: StringFilter | String,\n     ?   password?: StringFilter | String,\n     ?   position?: StringFilter | String,\n     ?   role?: StringFilter | String,\n     ?   isVerified?: BoolFilter | Boolean,\n     ?   status?: BoolFilter | Boolean,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   refreshToken?: StringNullableFilter | String | Null,\n     ?   resetPasswordToken?: StringNullableFilter | String | Null,\n     ?   Report?: ReportListRelationFilter,\n     ?   Event?: EventListRelationFilter,\n     ?   Contact?: ContactListRelationFilter\n       },\n       data: {\n         verificationToken: null\n       },\n       select: {\n         id: true,\n         name: true,\n         username: true,\n         email: true,\n         position: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `username` or `email` arguments. Available options are marked with ?.","target":"user.update","timestamp":"2023-12-26T06:32:57.989Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:96:32\n\n  93     throw new ResponseError(400, \"Token expired\")\n  94 }\n  95 \n→ 96 const confirm = await User.update({\n       where: {\n         verificationToken: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTksImlhdCI6MTcwMzU3MTIyNiwiZXhwIjoxNzAzNjU3NjI2fQ.soO9TIGaKw0RvxSKLXnN7Uf3OE42qPBlQDWhgjVu0sM\",\n     ?   id?: Int,\n     ?   username?: String,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   name?: StringFilter | String,\n     ?   password?: StringFilter | String,\n     ?   position?: StringFilter | String,\n     ?   role?: StringFilter | String,\n     ?   isVerified?: BoolFilter | Boolean,\n     ?   status?: BoolFilter | Boolean,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   refreshToken?: StringNullableFilter | String | Null,\n     ?   resetPasswordToken?: StringNullableFilter | String | Null,\n     ?   Report?: ReportListRelationFilter,\n     ?   Event?: EventListRelationFilter,\n     ?   Contact?: ContactListRelationFilter\n       },\n       data: {\n         verificationToken: null\n       },\n       select: {\n         id: true,\n         name: true,\n         username: true,\n         email: true,\n         position: true\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id`, `username` or `email` arguments. Available options are marked with ?.","target":"user.update","timestamp":"2023-12-26T06:37:13.075Z"}
{"level":"error","message":"\nInvalid `User.findFirst()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:81:35\n\n  78 const verify = async (id, token) => {\n  79     token = validate(verifyEmailUserValidation, token)\n  80     \n→ 81     const checkToken = await User.findFirst({\n           where: {\n             id: \"192\",\n                 ~~~~~\n             verificationToken: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTksImlhdCI6MTcwMzU3MTIyNiwiZXhwIjoxNzAzNjU3NjI2fQ.soO9TIGaKw0RvxSKLXnN7Uf3OE42qPBlQDWhgjVu0sM\"\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","target":"user.findFirst","timestamp":"2023-12-26T06:58:20.720Z"}
{"level":"error","message":"\nInvalid `User.findFirst()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:81:35\n\n  78 const verify = async (id, token) => {\n  79     // token = validate(verifyEmailUserValidation, token)\n  80     \n→ 81     const checkToken = await User.findFirst({\n           where: {\n             id: \"192\",\n                 ~~~~~\n             verificationToken: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTksImlhdCI6MTcwMzU3MTIyNiwiZXhwIjoxNzAzNjU3NjI2fQ.soO9TIGaKw0RvxSKLXnN7Uf3OE42qPBlQDWhgjVu0sM\"\n           }\n         })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String.","target":"user.findFirst","timestamp":"2023-12-26T06:59:14.105Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:129:24\n\n  126 \n  127 if (!user.isVerified) {\n  128     if (!user.verificationToken) {\n→ 129         await User.update({\n                where: {\n                  id: 19\n                },\n                data: {\n                  verificationToken: {}\n                                     ~~\n                }\n              })\n\nArgument `verificationToken`: Invalid value provided. Expected String or Null, provided Object.","target":"user.update","timestamp":"2023-12-26T09:29:02.703Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:131:24\n\n  128 \n  129 if (!user.isVerified) {\n  130     if (!user.verificationToken) {\n→ 131         await User.update({\n                where: {\n                  id: 19\n                },\n                data: {\n                  verificationToken: {}\n                                     ~~\n                }\n              })\n\nArgument `verificationToken`: Invalid value provided. Expected String or Null, provided Object.","target":"user.update","timestamp":"2023-12-26T09:30:00.398Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:131:24\n\n  128 \n  129 if (!user.isVerified) {\n  130     if (!user.verificationToken) {\n→ 131         await User.update({\n                where: {\n                  username: \"fadidajunaedy\"\n                },\n                data: {\n                  verificationToken: {}\n                                     ~~\n                }\n              })\n\nArgument `verificationToken`: Invalid value provided. Expected String or Null, provided Object.","target":"user.update","timestamp":"2023-12-26T09:31:41.928Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:158:20\n\n  155 refreshToken = user.refreshToken\n  156 if (!user.refreshToken) {\n  157     refreshToken = generateRefreshToken(user)\n→ 158     await User.update({\n            where: {\n              id: 19\n            },\n            data: {\n              refreshToken: {}\n                            ~~\n            }\n          })\n\nArgument `refreshToken`: Invalid value provided. Expected String or Null, provided Object.","target":"user.update","timestamp":"2023-12-26T09:40:02.715Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:158:20\n\n  155 refreshToken = user.refreshToken\n  156 if (!user.refreshToken) {\n  157     const newRefreshToken = generateRefreshToken(user)\n→ 158     await User.update({\n            where: {\n              id: 19\n            },\n            data: {\n              refreshToken: {}\n                            ~~\n            }\n          })\n\nArgument `refreshToken`: Invalid value provided. Expected String or Null, provided Object.","target":"user.update","timestamp":"2023-12-26T09:41:07.602Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:158:20\n\n  155 refreshToken = user.refreshToken\n  156 if (!user.refreshToken) {\n  157     const newRefreshToken = generateRefreshToken(user)\n→ 158     await User.update({\n            where: {\n              id: 19\n            },\n            data: {\n              refreshToken: {}\n                            ~~\n            }\n          })\n\nArgument `refreshToken`: Invalid value provided. Expected String or Null, provided Object.","target":"user.update","timestamp":"2023-12-26T09:42:09.315Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:235:16\n\n  232 }\n  233 \n  234 const resetToken = generateResetPasswordToken(user)\n→ 235 await User.update({\n        where: {\n          id: 19\n        },\n        data: {\n          resetPasswordToken: {}\n                              ~~\n        }\n      })\n\nArgument `resetPasswordToken`: Invalid value provided. Expected String or Null, provided Object.","target":"user.update","timestamp":"2023-12-26T11:07:37.552Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:235:16\n\n  232 }\n  233 \n  234 const resetToken = generateResetPasswordToken(user)\n→ 235 await User.update({\n        where: {\n          id: 19\n        },\n        data: {\n          resetPasswordToken: {}\n                              ~~\n        }\n      })\n\nArgument `resetPasswordToken`: Invalid value provided. Expected String or Null, provided Object.","target":"user.update","timestamp":"2023-12-26T11:09:05.949Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:307:23\n\n  304     request.password = hashPassword(request.password)\n  305 }\n  306 \n→ 307 return await User.update({\n        where: {\n          id: \"22\"\n              ~~~~\n        },\n        data: {\n          status: false\n        }\n      })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","target":"user.update","timestamp":"2023-12-26T16:50:15.883Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:307:23\n\n  304     request.password = hashPassword(request.password)\n  305 }\n  306 \n→ 307 return await User.update({\n        where: {\n          id: \"22\"\n              ~~~~\n        },\n        data: {\n          status: false\n        }\n      })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","target":"user.update","timestamp":"2023-12-26T17:10:51.096Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:307:23\n\n  304     request.password = hashPassword(request.password)\n  305 }\n  306 \n→ 307 return await User.update({\n        where: {\n          id: \"22\"\n              ~~~~\n        },\n        data: {\n          status: false\n        }\n      })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","target":"user.update","timestamp":"2023-12-26T17:12:10.199Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:307:23\n\n  304     request.password = hashPassword(request.password)\n  305 }\n  306 \n→ 307 return await User.update({\n        where: {\n          id: \"22\"\n              ~~~~\n        },\n        data: {\n          status: false\n        }\n      })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","target":"user.update","timestamp":"2023-12-26T17:12:44.839Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:307:23\n\n  304     request.password = hashPassword(request.password)\n  305 }\n  306 \n→ 307 return await User.update({\n        where: {\n          id: \"22\"\n              ~~~~\n        },\n        data: {\n          status: false\n        }\n      })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","target":"user.update","timestamp":"2023-12-26T17:14:40.831Z"}
{"level":"error","message":"\nInvalid `User.update()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\user-service.js:307:23\n\n  304     request.password = hashPassword(request.password)\n  305 }\n  306 \n→ 307 return await User.update({\n        where: {\n          id: \"22\"\n              ~~~~\n        },\n        data: {\n          status: false\n        }\n      })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","target":"user.update","timestamp":"2023-12-26T17:14:46.401Z"}
{"level":"error","message":"\nInvalid `Report.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\report-service.js:18:25\n\n  15     throw new ResponseError(400, \"One of the file or linkFile must be filled\")\n  16 }\n  17 \n→ 18 return await Report.create({\n       data: {\n         title: \"Pedasdasdasd\",\n         category: \"program\",\n         subcategory: \"hutan-dan-iklim\",\n         description: \"lorem ipsum dolor\",\n         tags: [\n           \"tag1\",\n           \"tags2\"\n         ],\n         ~~~~~~~~~\n         year: 2012,\n         linkFile: \"https://somefiles.com\",\n         createdUser: \"fadidajunaedy\"\n       }\n     })\n\nArgument `tags`: Invalid value provided. Expected String, provided (String, String).","target":"report.create","timestamp":"2023-12-27T04:52:26.163Z"}
{"level":"error","message":"\nInvalid `Report.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\report-service.js:18:25\n\n  15     throw new ResponseError(400, \"One of the file or linkFile must be filled\")\n  16 }\n  17 \n→ 18 return await Report.create({\n       data: {\n         title: \"Pedasdasdasd\",\n         category: \"program\",\n         subcategory: \"hutan-dan-iklim\",\n         description: \"lorem ipsum dolor\",\n         tags: [\n           \"tag1\",\n           \"tags2\"\n         ],\n         ~~~~~~~~~\n         year: 2012,\n         linkFile: \"https://somefiles.com\",\n         createdUser: \"fadidajunaedy\",\n         file: null\n       }\n     })\n\nArgument `tags`: Invalid value provided. Expected String, provided (String, String).","target":"report.create","timestamp":"2023-12-27T04:53:24.148Z"}
{"level":"error","message":"\nInvalid `Report.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\report-service.js:18:25\n\n  15     throw new ResponseError(400, \"One of the file or linkFile must be filled\")\n  16 }\n  17 \n→ 18 return await Report.create({\n       data: {\n         title: \"Pedasdasdasd\",\n         category: \"program\",\n         subcategory: \"hutan-dan-iklim\",\n         description: \"lorem ipsum dolor\",\n         tags: [\n           \"tag1\",\n           \"tags2\"\n         ],\n         ~~~~~~~~~\n         year: 2012,\n         linkFile: \"https://somefiles.com\",\n         createdUser: \"fadidajunaedy\",\n         file: null\n       }\n     })\n\nArgument `tags`: Invalid value provided. Expected String, provided (String, String).","target":"report.create","timestamp":"2023-12-27T04:54:56.727Z"}
{"level":"error","message":"\nInvalid `Report.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\report-service.js:19:25\n\n  16     throw new ResponseError(400, \"One of the file or linkFile must be filled\")\n  17 }\n  18 \n→ 19 return await Report.create({\n       data: {\n         title: \"Pedasdasdasd\",\n         category: \"program\",\n         subcategory: \"hutan-dan-iklim\",\n         description: \"lorem ipsum dolor\",\n         tags: [\n           \"tag1\",\n           \"tags2\"\n         ],\n         ~~~~~~~~~\n         year: 2012,\n         linkFile: \"https://somefiles.com\",\n         createdUser: \"fadidajunaedy\",\n         file: null\n       }\n     })\n\nArgument `tags`: Invalid value provided. Expected String, provided (String, String).","target":"report.create","timestamp":"2023-12-27T04:55:38.754Z"}
{"level":"error","message":"\nInvalid `Report.create()` invocation in\nD:\\Code\\madani-infosphere-api\\src\\service\\report-service.js:21:25\n\n  18 \n  19 Report.befo\n  20 \n→ 21 return await Report.create({\n       data: {\n         title: \"Pedasdasdasd\",\n         category: \"program\",\n         subcategory: \"hutan-dan-iklim\",\n         description: \"lorem ipsum dolor\",\n         tags: [\n           \"tag1\",\n           \"tags2\"\n         ],\n         ~~~~~~~~~\n         year: 2012,\n         linkFile: \"https://somefiles.com\",\n         createdUser: \"fadidajunaedy\",\n         file: null\n       }\n     })\n\nArgument `tags`: Invalid value provided. Expected String, provided (String, String).","target":"report.create","timestamp":"2023-12-27T04:57:10.737Z"}
